<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="adminWelcome" xml:space="preserve">
    <value>Administaration control window</value>
  </data>
  <data name="birth" xml:space="preserve">
    <value>Birthday</value>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="createBook" xml:space="preserve">
    <value>Create book information</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="deleteConfirm" xml:space="preserve">
    <value>Do wou want to delete selected</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="editUserInfo" xml:space="preserve">
    <value>Window of change information about users</value>
  </data>
  <data name="editBook" xml:space="preserve">
    <value>Edit book information</value>
  </data>
  <data name="editReaderInfo" xml:space="preserve">
    <value>Window of change information about readers</value>
  </data>
  <data name="errorLoginEmpty" xml:space="preserve">
    <value>Field "Login" should not be empty</value>
  </data>
  <data name="errorLoginUnfulfilledLength" xml:space="preserve">
    <value>Field "Login" should has length between 6 and 15 symbols</value>
  </data>
  <data name="errorPasswordEmpty" xml:space="preserve">
    <value>Field "Password" should not be empty</value>
  </data>
  <data name="failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="fullName" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="fullTitle" xml:space="preserve">
    <value>Full title</value>
  </data>
  <data name="getBook" xml:space="preserve">
    <value>Return book to library</value>
  </data>
  <data name="giveBook" xml:space="preserve">
    <value>Give book to reader</value>
  </data>
  <data name="importantFieldMark" xml:space="preserve">
    <value>*</value>
  </data>
  <data name="isbn" xml:space="preserve">
    <value>ISBN code</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="librarian" xml:space="preserve">
    <value>Librarian</value>
  </data>
  <data name="librarianWelcome" xml:space="preserve">
    <value>Librarian management window</value>
  </data>
  <data name="location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="logon" xml:space="preserve">
    <value>Log on</value>
  </data>
  <data name="logonFailed" xml:space="preserve">
    <value>Log on failed</value>
  </data>
  <data name="manageBook" xml:space="preserve">
    <value>Book information</value>
  </data>
  <data name="manageUser" xml:space="preserve">
    <value>User information</value>
  </data>
  <data name="parentSubject" xml:space="preserve">
    <value>Parent Subject</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>Mobile Phone: +380</value>
  </data>
  <data name="position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="publishDate" xml:space="preserve">
    <value>Publish Date</value>
  </data>
  <data name="publishHouse" xml:space="preserve">
    <value>Publish House</value>
  </data>
  <data name="publishHouseName" xml:space="preserve">
    <value>Name </value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="series" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="showInfo" xml:space="preserve">
    <value>Show details</value>
  </data>
  <data name="statusStripAdminMain" xml:space="preserve">
    <value>Type name of user that you want to find</value>
  </data>
  <data name="statusStripControlAdmin" xml:space="preserve">
    <value>Create new user in system. Fill all fields that mark with *</value>
  </data>
  <data name="statusStripLogOn" xml:space="preserve">
    <value>Log on and start work with system</value>
  </data>
  <data name="statusStripStockmanMain" xml:space="preserve">
    <value>Type title of book that you want to find</value>
  </data>
  <data name="stockman" xml:space="preserve">
    <value>Stockman</value>
  </data>
  <data name="stockmanWelcome" xml:space="preserve">
    <value>Stockman control window</value>
  </data>
  <data name="subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="successfull" xml:space="preserve">
    <value>Successfull</value>
  </data>
  <data name="tipsAccountType" xml:space="preserve">
    <value>Choice how you want to log on to system</value>
  </data>
  <data name="tipsLogin" xml:space="preserve">
    <value>Enter your login for log on to library system</value>
  </data>
  <data name="tipsPassword" xml:space="preserve">
    <value>Enter your password for log on to library system</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>Welcome to library managment system</value>
  </data>
  <data name="userInfo" xml:space="preserve">
    <value>User information</value>
  </data>
  <data name="libraryNumTicket" xml:space="preserve">
    <value>Library number ticket</value>
  </data>
  <data name="client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="bookList" xml:space="preserve">
    <value>List of books on client hands</value>
  </data>
  <data name="bookNum" xml:space="preserve">
    <value>Inventory book number</value>
  </data>
  <data name="clientCreate" xml:space="preserve">
    <value>Create client information</value>
  </data>
  <data name="clientEdit" xml:space="preserve">
    <value>Edit client information</value>
  </data>
  <data name="createClient" xml:space="preserve">
    <value>Create new client</value>
  </data>
  <data name="personalInfo" xml:space="preserve">
    <value>View personal client information</value>
  </data>
  <data name="returnBook" xml:space="preserve">
    <value>Return book</value>
  </data>
  <data name="rentBook" xml:space="preserve">
    <value>Rent book on user hand</value>
  </data>
  <data name="bookLibExample" xml:space="preserve">
    <value>Add new book examples</value>
  </data>
  <data name="listBookNum" xml:space="preserve">
    <value>All inventory numbers for current isbn</value>
  </data>
  <data name="setBookNum" xml:space="preserve">
    <value>Set inventory code for book</value>
  </data>
  <data name="userSearchEmpty" xml:space="preserve">
    <value>Field "User" should not be empty</value>
  </data>
  <data name="userSearchNull" xml:space="preserve">
    <value>String for search user is not valid</value>
  </data>
  <data name="userSearchFailed" xml:space="preserve">
    <value> is not exist in system. You can create it!</value>
  </data>
  <data name="operationNOK" xml:space="preserve">
    <value>During processing your operation something went wrong</value>
  </data>
  <data name="operationOK" xml:space="preserve">
    <value>Operation was successfully done</value>
  </data>
  <data name="annotation" xml:space="preserve">
    <value>Annotation</value>
  </data>
  <data name="author" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="inventoryCode" xml:space="preserve">
    <value>Inventore Code</value>
  </data>
  <data name="searchPublishHouseFailed" xml:space="preserve">
    <value>Publishing house with this name is not exist in library. Do you want to add it?</value>
  </data>
</root>